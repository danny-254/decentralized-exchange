{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dexTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "dexToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount2",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token2",
          "type": "address"
        }
      ],
      "name": "provideLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_dai",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gst",
          "type": "address"
        }
      ],
      "name": "redeemShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token2",
          "type": "address"
        }
      ],
      "name": "swapTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/user001/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC20/IERC20.sol",
    "1": "contracts/Pool.sol"
  },
  "ast": {
    "absolutePath": "contracts/Pool.sol",
    "exportedSymbols": {
      "IERC20": [252],
      "TokenPool": [174]
    },
    "id": 175,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/user001/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 175,
        "sourceUnit": 253,
        "src": "57:56:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 174,
        "linearizedBaseContracts": [174],
        "name": "TokenPool",
        "nameLocation": "125:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "16cfc4c1",
            "id": 5,
            "mutability": "mutable",
            "name": "dexToken",
            "nameLocation": "155:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "141:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$252",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 252,
                "src": "141:6:1"
              },
              "referencedDeclaration": 252,
              "src": "141:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$252",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "50f3fc81",
            "id": 8,
            "mutability": "mutable",
            "name": "providers",
            "nameLocation": "186:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 174,
            "src": "169:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "169:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7,
              "nodeType": "ArrayTypeName",
              "src": "169:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "240:52:1",
              "statements": [
                {
                  "expression": {
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13,
                      "name": "dexToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "250:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$252",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15,
                          "name": "_dexTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "268:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 14,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "261:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "261:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$252",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "250:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$252",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "250:35:1"
                }
              ]
            },
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_dexTokenAddress",
                  "nameLocation": "222:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "214:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "213:26:1"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:0:1"
            },
            "scope": 174,
            "src": "202:90:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "409:375:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32,
                          "name": "_amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "427:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 33,
                          "name": "_amount2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "439:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "427:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e732070726f7669646564206d757374206265206f6620657175616c2076616c7565",
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "449:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42b54b0fc39a2fa66983703d2e9b6d2f5986ebd9cf63085e736f514d38649322",
                          "typeString": "literal_string \"tokens provided must be of equal value\""
                        },
                        "value": "tokens provided must be of equal value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42b54b0fc39a2fa66983703d2e9b6d2f5986ebd9cf63085e736f514d38649322",
                          "typeString": "literal_string \"tokens provided must be of equal value\""
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "419:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "419:71:1"
                },
                {
                  "assignments": [39],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "totalValueSent",
                      "nameLocation": "508:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "500:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "500:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "525:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "500:26:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "565:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "565:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 50,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "585:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          ],
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "577:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "577:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "577:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 52,
                        "name": "_amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "592:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 43,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "543:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 42,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "536:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "536:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "536:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "536:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "640:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "640:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "660:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          ],
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "652:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "652:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "652:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 65,
                        "name": "_amount2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "667:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 56,
                            "name": "_token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "618:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 55,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "611:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "611:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "611:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "611:65:1"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "totalValueSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "686:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 69,
                        "name": "_amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "703:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 70,
                        "name": "_amount2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "714:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "703:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "686:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "686:36:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "750:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "750:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79,
                        "name": "totalValueSent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "762:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 74,
                        "name": "dexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "732:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 201,
                      "src": "732:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "732:45:1"
                }
              ]
            },
            "functionSelector": "06cc5a8a",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideLiquidity",
            "nameLocation": "307:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_amount1",
                  "nameLocation": "332:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "324:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_amount2",
                  "nameLocation": "350:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "342:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "368:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "360:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nameLocation": "385:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "377:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "323:70:1"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:1"
            },
            "scope": 174,
            "src": "298:486:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "869:208:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 93,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "887:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "897:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "887:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "900:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "879:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "879:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "879:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "971:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "971:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 107,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "991:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          ],
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "983:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "983:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "983:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 109,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "998:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 100,
                            "name": "_token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87,
                            "src": "949:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "942:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "942:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "942:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1041:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1041:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 118,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1053:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 113,
                            "name": "_token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "1023:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 112,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "1016:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1016:15:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 201,
                      "src": "1016:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:45:1"
                }
              ]
            },
            "functionSelector": "f70d1d98",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokens",
            "nameLocation": "800:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "819:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "811:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "836:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "828:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nameLocation": "853:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "845:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:51:1"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "869:0:1"
            },
            "scope": 174,
            "src": "791:286:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "1156:245:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 132,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "1174:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1184:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1174:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1187:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1166:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1251:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1251:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1271:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenPool_$174",
                              "typeString": "contract TokenPool"
                            }
                          ],
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1263:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 143,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1263:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1263:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 147,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1278:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 138,
                        "name": "dexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1229:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "1229:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1318:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1318:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 156,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "1330:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1338:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1330:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 151,
                            "name": "_dai",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1303:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 150,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "1296:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1296:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 201,
                      "src": "1296:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1372:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1372:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 167,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "1384:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1392:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1384:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 162,
                            "name": "_gst",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "1357:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 161,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "1350:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$252_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1350:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$252",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 201,
                      "src": "1350:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:44:1"
                }
              ]
            },
            "functionSelector": "12c2c330",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemShare",
            "nameLocation": "1092:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1112:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1104:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_dai",
                  "nameLocation": "1129:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1121:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_gst",
                  "nameLocation": "1143:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1135:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:45:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:1"
            },
            "scope": 174,
            "src": "1083:318:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 175,
        "src": "116:1287:1",
        "usedErrors": []
      }
    ],
    "src": "32:1371:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107f03803806107f083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61075d806100936000396000f3fe60806040526004361061004a5760003560e01c806306cc5a8a1461004f57806312c2c3301461006457806316cfc4c11461008457806350f3fc81146100c0578063f70d1d98146100e0575b600080fd5b61006261005d3660046105f7565b610100565b005b34801561007057600080fd5b5061006261007f36600461063d565b6102d6565b34801561009057600080fd5b506000546100a4906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100cc57600080fd5b506100a46100db366004610679565b6104ba565b3480156100ec57600080fd5b506100626100fb36600461063d565b6104e4565b8284146101635760405162461bcd60e51b815260206004820152602660248201527f746f6b656e732070726f7669646564206d757374206265206f6620657175616c6044820152652076616c756560d01b60648201526084015b60405180910390fd5b6040516323b872dd60e01b81526000906001600160a01b038416906323b872dd9061019690339030908a90600401610692565b6020604051808303816000875af11580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d991906106b6565b506040516323b872dd60e01b81526001600160a01b038316906323b872dd9061020a90339030908990600401610692565b6020604051808303816000875af1158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d91906106b6565b5061025884866106df565b60005460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce91906106b6565b505050505050565b600083116103265760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161015a565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061035a90339030908890600401610692565b6020604051808303816000875af1158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d91906106b6565b506001600160a01b03821663a9059cbb336103b9600287610705565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042891906106b6565b506001600160a01b03811663a9059cbb33610444600287610705565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b6020604051808303816000875af1158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b491906106b6565b50505050565b600181815481106104ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b600083116105345760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161015a565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061056490339030908890600401610692565b6020604051808303816000875af1158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a791906106b6565b5060405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0382169063a9059cbb90604401610471565b80356001600160a01b03811681146105f257600080fd5b919050565b6000806000806080858703121561060d57600080fd5b8435935060208501359250610624604086016105db565b9150610632606086016105db565b905092959194509250565b60008060006060848603121561065257600080fd5b83359250610662602085016105db565b9150610670604085016105db565b90509250925092565b60006020828403121561068b57600080fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156106c857600080fd5b815180151581146106d857600080fd5b9392505050565b6000821982111561070057634e487b7160e01b600052601160045260246000fd5b500190565b60008261072257634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122042e42cc45a0541bbf073cd1fc48602c790c52e986df2f174077b0a5179b74e9464736f6c634300080b0033",
  "bytecodeSha1": "ea2eb8a7c61f022118729892d182a3395f88838d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TokenPool",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "TokenPool.provideLiquidity": {
          "12": [427, 447, true]
        },
        "TokenPool.redeemShare": {
          "13": [1174, 1185, true]
        },
        "TokenPool.swapTokens": {
          "14": [887, 898, true]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {
        "TokenPool.provideLiquidity": {
          "0": [419, 490],
          "1": [536, 601],
          "2": [611, 676],
          "3": [686, 722],
          "4": [732, 777]
        },
        "TokenPool.redeemShare": {
          "5": [1166, 1219],
          "6": [1229, 1286],
          "7": [1296, 1340],
          "8": [1350, 1394]
        },
        "TokenPool.swapTokens": {
          "9": [879, 932],
          "10": [942, 1006],
          "11": [1016, 1061]
        }
      }
    }
  },
  "dependencies": ["OpenZeppelin/openzeppelin-contracts@4.4.1/IERC20"],
  "deployedBytecode": "60806040526004361061004a5760003560e01c806306cc5a8a1461004f57806312c2c3301461006457806316cfc4c11461008457806350f3fc81146100c0578063f70d1d98146100e0575b600080fd5b61006261005d3660046105f7565b610100565b005b34801561007057600080fd5b5061006261007f36600461063d565b6102d6565b34801561009057600080fd5b506000546100a4906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100cc57600080fd5b506100a46100db366004610679565b6104ba565b3480156100ec57600080fd5b506100626100fb36600461063d565b6104e4565b8284146101635760405162461bcd60e51b815260206004820152602660248201527f746f6b656e732070726f7669646564206d757374206265206f6620657175616c6044820152652076616c756560d01b60648201526084015b60405180910390fd5b6040516323b872dd60e01b81526000906001600160a01b038416906323b872dd9061019690339030908a90600401610692565b6020604051808303816000875af11580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d991906106b6565b506040516323b872dd60e01b81526001600160a01b038316906323b872dd9061020a90339030908990600401610692565b6020604051808303816000875af1158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d91906106b6565b5061025884866106df565b60005460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce91906106b6565b505050505050565b600083116103265760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161015a565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061035a90339030908890600401610692565b6020604051808303816000875af1158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d91906106b6565b506001600160a01b03821663a9059cbb336103b9600287610705565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610404573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042891906106b6565b506001600160a01b03811663a9059cbb33610444600287610705565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b6020604051808303816000875af1158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b491906106b6565b50505050565b600181815481106104ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b600083116105345760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161015a565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061056490339030908890600401610692565b6020604051808303816000875af1158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a791906106b6565b5060405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0382169063a9059cbb90604401610471565b80356001600160a01b03811681146105f257600080fd5b919050565b6000806000806080858703121561060d57600080fd5b8435935060208501359250610624604086016105db565b9150610632606086016105db565b905092959194509250565b60008060006060848603121561065257600080fd5b83359250610662602085016105db565b9150610670604085016105db565b90509250925092565b60006020828403121561068b57600080fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156106c857600080fd5b815180151581146106d857600080fd5b9392505050565b6000821982111561070057634e487b7160e01b600052601160045260246000fd5b500190565b60008261072257634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122042e42cc45a0541bbf073cd1fc48602c790c52e986df2f174077b0a5179b74e9464736f6c634300080b0033",
  "deployedSourceMap": "116:1287:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:486;;;;;;:::i;:::-;;:::i;:::-;;1083:318;;;;;;;;;;-1:-1:-1;1083:318:1;;;;;:::i;:::-;;:::i;141:22::-;;;;;;;;;;-1:-1:-1;141:22:1;;;;-1:-1:-1;;;;;141:22:1;;;;;;-1:-1:-1;;;;;1105:32:2;;;1087:51;;1075:2;1060:18;141:22:1;;;;;;;169:26;;;;;;;;;;-1:-1:-1;169:26:1;;;;;:::i;:::-;;:::i;791:286::-;;;;;;;;;;-1:-1:-1;791:286:1;;;;;:::i;:::-;;:::i;298:486::-;439:8;427;:20;419:71;;;;-1:-1:-1;;;419:71:1;;1744:2:2;419:71:1;;;1726:21:2;1783:2;1763:18;;;1756:30;1822:34;1802:18;;;1795:62;-1:-1:-1;;;1873:18:2;;;1866:36;1919:19;;419:71:1;;;;;;;;;536:65;;-1:-1:-1;;;536:65:1;;500:22;;-1:-1:-1;;;;;536:28:1;;;;;:65;;565:10;;585:4;;592:8;;536:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;611:65:1;;-1:-1:-1;;;611:65:1;;-1:-1:-1;;;;;611:28:1;;;;;:65;;640:10;;660:4;;667:8;;611:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;703:19:1;714:8;703;:19;:::i;:::-;732:8;;:45;;-1:-1:-1;;;732:45:1;;750:10;732:45;;;3015:51:2;3082:18;;;3075:34;;;686:36:1;;-1:-1:-1;;;;;;732:8:1;;:17;;2988:18:2;;732:45:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;409:375;298:486;;;;:::o;1083:318::-;1184:1;1174:7;:11;1166:53;;;;-1:-1:-1;;;1166:53:1;;3322:2:2;1166:53:1;;;3304:21:2;3361:2;3341:18;;;3334:30;3400:31;3380:18;;;3373:59;3449:18;;1166:53:1;3120:353:2;1166:53:1;1229:8;;:57;;-1:-1:-1;;;1229:57:1;;-1:-1:-1;;;;;1229:8:1;;;;:21;;:57;;1251:10;;1271:4;;1278:7;;1229:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1296:21:1;;;1318:10;1330:9;1338:1;1330:7;:9;:::i;:::-;1296:44;;-1:-1:-1;;;;;;1296:44:1;;;;;;;-1:-1:-1;;;;;3033:32:2;;;1296:44:1;;;3015:51:2;3082:18;;;3075:34;2988:18;;1296:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1350:21:1;;;1372:10;1384:9;1392:1;1384:7;:9;:::i;:::-;1350:44;;-1:-1:-1;;;;;;1350:44:1;;;;;;;-1:-1:-1;;;;;3033:32:2;;;1350:44:1;;;3015:51:2;3082:18;;;3075:34;2988:18;;1350:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1083:318;;;:::o;169:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:26:1;;-1:-1:-1;169:26:1;:::o;791:286::-;897:1;887:7;:11;879:53;;;;-1:-1:-1;;;879:53:1;;3322:2:2;879:53:1;;;3304:21:2;3361:2;3341:18;;;3334:30;3400:31;3380:18;;;3373:59;3449:18;;879:53:1;3120:353:2;879:53:1;942:64;;-1:-1:-1;;;942:64:1;;-1:-1:-1;;;;;942:28:1;;;;;:64;;971:10;;991:4;;998:7;;942:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1016:45:1;;-1:-1:-1;;;1016:45:1;;1041:10;1016:45;;;3015:51:2;3082:18;;;3075:34;;;-1:-1:-1;;;;;1016:24:1;;;;;2988:18:2;;1016:45:1;2841:274:2;14:173;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:397::-;278:6;286;294;302;355:3;343:9;334:7;330:23;326:33;323:53;;;372:1;369;362:12;323:53;408:9;395:23;385:33;;465:2;454:9;450:18;437:32;427:42;;488:38;522:2;511:9;507:18;488:38;:::i;:::-;478:48;;545:38;579:2;568:9;564:18;545:38;:::i;:::-;535:48;;192:397;;;;;;;:::o;594:328::-;671:6;679;687;740:2;728:9;719:7;715:23;711:32;708:52;;;756:1;753;746:12;708:52;792:9;779:23;769:33;;821:38;855:2;844:9;840:18;821:38;:::i;:::-;811:48;;878:38;912:2;901:9;897:18;878:38;:::i;:::-;868:48;;594:328;;;;;:::o;1149:180::-;1208:6;1261:2;1249:9;1240:7;1236:23;1232:32;1229:52;;;1277:1;1274;1267:12;1229:52;-1:-1:-1;1300:23:2;;1149:180;-1:-1:-1;1149:180:2:o;1949:375::-;-1:-1:-1;;;;;2207:15:2;;;2189:34;;2259:15;;;;2254:2;2239:18;;2232:43;2306:2;2291:18;;2284:34;;;;2139:2;2124:18;;1949:375::o;2329:277::-;2396:6;2449:2;2437:9;2428:7;2424:23;2420:32;2417:52;;;2465:1;2462;2455:12;2417:52;2497:9;2491:16;2550:5;2543:13;2536:21;2529:5;2526:32;2516:60;;2572:1;2569;2562:12;2516:60;2595:5;2329:277;-1:-1:-1;;;2329:277:2:o;2611:225::-;2651:3;2682:1;2678:6;2675:1;2672:13;2669:136;;;2727:10;2722:3;2718:20;2715:1;2708:31;2762:4;2759:1;2752:15;2790:4;2787:1;2780:15;2669:136;-1:-1:-1;2821:9:2;;2611:225::o;3478:217::-;3518:1;3544;3534:132;;3588:10;3583:3;3579:20;3576:1;3569:31;3623:4;3620:1;3613:15;3651:4;3648:1;3641:15;3534:132;-1:-1:-1;3680:9:2;;3478:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [116, 1403],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CC5A8A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x12C2C330 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x16CFC4C1 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x50F3FC81 EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF70D1D98 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62 PUSH2 0x5D CALLDATASIZE PUSH1 0x4 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xA4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH2 0xDB CALLDATASIZE PUSH1 0x4 PUSH2 0x679 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x62 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST DUP3 DUP5 EQ PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E732070726F7669646564206D757374206265206F6620657175616C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x2076616C7565 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x196 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x692 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x20A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x692 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH2 0x258 DUP5 DUP7 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x35A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x692 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x379 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH4 0xA9059CBB CALLER PUSH2 0x3B9 PUSH1 0x2 DUP8 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0xA9059CBB CALLER PUSH2 0x444 PUSH1 0x2 DUP8 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x490 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x564 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x692 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x583 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x471 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x624 PUSH1 0x40 DUP7 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP2 POP PUSH2 0x632 PUSH1 0x60 DUP7 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x662 PUSH1 0x20 DUP6 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP2 POP PUSH2 0x670 PUSH1 0x40 DUP6 ADD PUSH2 0x5DB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x700 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x722 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xE4 0x2C 0xC4 GAS SDIV COINBASE 0xBB CREATE PUSH20 0xCD1FC48602C790C52E986DF2F174077B0A5179B7 0x4E SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [116, 1403],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [116, 1403],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [116, 1403],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [116, 1403],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [116, 1403],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [116, 1403],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [116, 1403],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6CC5A8A"
    },
    "25": {
      "fn": null,
      "offset": [116, 1403],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [116, 1403],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH4",
      "path": "1",
      "value": "0x12C2C330"
    },
    "36": {
      "fn": null,
      "offset": [116, 1403],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [116, 1403],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH4",
      "path": "1",
      "value": "0x16CFC4C1"
    },
    "47": {
      "fn": null,
      "offset": [116, 1403],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH2",
      "path": "1",
      "value": "0x84"
    },
    "51": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [116, 1403],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH4",
      "path": "1",
      "value": "0x50F3FC81"
    },
    "58": {
      "fn": null,
      "offset": [116, 1403],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0"
    },
    "62": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [116, 1403],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF70D1D98"
    },
    "69": {
      "fn": null,
      "offset": [116, 1403],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE0"
    },
    "73": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [116, 1403],
      "op": "JUMPDEST",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [116, 1403],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [116, 1403],
      "op": "DUP1",
      "path": "1"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [116, 1403],
      "op": "REVERT",
      "path": "1"
    },
    "79": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "JUMPDEST",
      "path": "1"
    },
    "80": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "83": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D"
    },
    "86": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "87": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "89": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F7"
    },
    "92": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [298, 784],
      "op": "JUMP",
      "path": "1"
    },
    "93": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "JUMPDEST",
      "path": "1"
    },
    "94": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "97": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [298, 784],
      "op": "JUMP",
      "path": "1"
    },
    "98": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "JUMPDEST",
      "path": "1"
    },
    "99": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "STOP",
      "path": "1"
    },
    "100": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "JUMPDEST",
      "path": "1"
    },
    "101": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "CALLVALUE",
      "path": "1"
    },
    "102": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "DUP1",
      "path": "1"
    },
    "103": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "ISZERO",
      "path": "1"
    },
    "104": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70"
    },
    "107": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "JUMPI",
      "path": "1"
    },
    "108": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "110": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "DUP1",
      "path": "1"
    },
    "111": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "REVERT",
      "path": "1"
    },
    "112": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "JUMPDEST",
      "path": "1"
    },
    "113": {
      "op": "POP"
    },
    "114": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "117": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F"
    },
    "120": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "121": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "123": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH2",
      "path": "1",
      "value": "0x63D"
    },
    "126": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1083, 1401],
      "op": "JUMP",
      "path": "1"
    },
    "127": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "JUMPDEST",
      "path": "1"
    },
    "128": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D6"
    },
    "131": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1083, 1401],
      "op": "JUMP",
      "path": "1"
    },
    "132": {
      "offset": [141, 163],
      "op": "JUMPDEST",
      "path": "1"
    },
    "133": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "CALLVALUE",
      "path": "1"
    },
    "134": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "ISZERO",
      "path": "1"
    },
    "136": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90"
    },
    "139": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "JUMPI",
      "path": "1"
    },
    "140": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "142": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "DUP1",
      "path": "1"
    },
    "143": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "REVERT",
      "path": "1"
    },
    "144": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "JUMPDEST",
      "path": "1"
    },
    "145": {
      "op": "POP"
    },
    "146": {
      "offset": [141, 163],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "148": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "SLOAD",
      "path": "1"
    },
    "149": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4"
    },
    "152": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "SWAP1",
      "path": "1"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "op": "SUB"
    },
    "161": {
      "offset": [141, 163],
      "op": "AND",
      "path": "1"
    },
    "162": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "DUP2",
      "path": "1"
    },
    "163": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "JUMP",
      "path": "1"
    },
    "164": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "JUMPDEST",
      "path": "1"
    },
    "165": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "167": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "MLOAD",
      "path": "1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "174": {
      "op": "SHL"
    },
    "175": {
      "op": "SUB"
    },
    "176": {
      "op": "SWAP1"
    },
    "177": {
      "op": "SWAP2"
    },
    "178": {
      "op": "AND"
    },
    "179": {
      "op": "DUP2"
    },
    "180": {
      "op": "MSTORE"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "183": {
      "op": "ADD"
    },
    "184": {
      "offset": [141, 163],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "186": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "MLOAD",
      "path": "1"
    },
    "187": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "DUP1",
      "path": "1"
    },
    "188": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "SWAP2",
      "path": "1"
    },
    "189": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "SUB",
      "path": "1"
    },
    "190": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "SWAP1",
      "path": "1"
    },
    "191": {
      "fn": "TokenPool.redeemShare",
      "offset": [141, 163],
      "op": "RETURN",
      "path": "1"
    },
    "192": {
      "offset": [169, 195],
      "op": "JUMPDEST",
      "path": "1"
    },
    "193": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "CALLVALUE",
      "path": "1"
    },
    "194": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP1",
      "path": "1"
    },
    "195": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "ISZERO",
      "path": "1"
    },
    "196": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "199": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "JUMPI",
      "path": "1"
    },
    "200": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "202": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP1",
      "path": "1"
    },
    "203": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "REVERT",
      "path": "1"
    },
    "204": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "JUMPDEST",
      "path": "1"
    },
    "205": {
      "op": "POP"
    },
    "206": {
      "offset": [169, 195],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4"
    },
    "209": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "212": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "213": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "215": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH2",
      "path": "1",
      "value": "0x679"
    },
    "218": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [169, 195],
      "op": "JUMP",
      "path": "1"
    },
    "219": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BA"
    },
    "223": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [169, 195],
      "op": "JUMP",
      "path": "1"
    },
    "224": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "JUMPDEST",
      "path": "1"
    },
    "225": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "CALLVALUE",
      "path": "1"
    },
    "226": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "DUP1",
      "path": "1"
    },
    "227": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "ISZERO",
      "path": "1"
    },
    "228": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEC"
    },
    "231": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "JUMPI",
      "path": "1"
    },
    "232": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "234": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "DUP1",
      "path": "1"
    },
    "235": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "REVERT",
      "path": "1"
    },
    "236": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "JUMPDEST",
      "path": "1"
    },
    "237": {
      "op": "POP"
    },
    "238": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62"
    },
    "241": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB"
    },
    "244": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "245": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "247": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH2",
      "path": "1",
      "value": "0x63D"
    },
    "250": {
      "fn": "TokenPool.swapTokens",
      "jump": "i",
      "offset": [791, 1077],
      "op": "JUMP",
      "path": "1"
    },
    "251": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "JUMPDEST",
      "path": "1"
    },
    "252": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E4"
    },
    "255": {
      "fn": "TokenPool.swapTokens",
      "jump": "i",
      "offset": [791, 1077],
      "op": "JUMP",
      "path": "1"
    },
    "256": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [439, 447],
      "op": "DUP3",
      "path": "1",
      "statement": 0
    },
    "258": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [427, 435],
      "op": "DUP5",
      "path": "1"
    },
    "259": {
      "branch": 12,
      "fn": "TokenPool.provideLiquidity",
      "offset": [427, 447],
      "op": "EQ",
      "path": "1"
    },
    "260": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "PUSH2",
      "path": "1",
      "value": "0x163"
    },
    "263": {
      "branch": 12,
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "JUMPI",
      "path": "1"
    },
    "264": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "266": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "MLOAD",
      "path": "1"
    },
    "267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "DUP2",
      "path": "1"
    },
    "275": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "MSTORE",
      "path": "1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "278": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "280": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "DUP3",
      "path": "1"
    },
    "281": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "ADD",
      "path": "1"
    },
    "282": {
      "op": "MSTORE"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "287": {
      "op": "DUP3"
    },
    "288": {
      "op": "ADD"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH32",
      "value": "0x746F6B656E732070726F7669646564206D757374206265206F6620657175616C"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "325": {
      "op": "DUP3"
    },
    "326": {
      "op": "ADD"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH6",
      "value": "0x2076616C7565"
    },
    "335": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "337": {
      "op": "SHL"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "340": {
      "op": "DUP3"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "345": {
      "op": "ADD"
    },
    "346": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "JUMPDEST",
      "path": "1"
    },
    "347": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "349": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "MLOAD",
      "path": "1"
    },
    "350": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "DUP1",
      "path": "1"
    },
    "351": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "SWAP2",
      "path": "1"
    },
    "352": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "SUB",
      "path": "1"
    },
    "353": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "SWAP1",
      "path": "1"
    },
    "354": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "355": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [419, 490],
      "op": "JUMPDEST",
      "path": "1"
    },
    "356": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x40"
    },
    "358": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "MLOAD",
      "path": "1"
    },
    "359": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "364": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "366": {
      "op": "SHL"
    },
    "367": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP2",
      "path": "1"
    },
    "368": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "MSTORE",
      "path": "1"
    },
    "369": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [500, 522],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "371": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [500, 522],
      "op": "SWAP1",
      "path": "1"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "op": "SUB"
    },
    "380": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 564],
      "op": "DUP5",
      "path": "1"
    },
    "381": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 564],
      "op": "AND",
      "path": "1"
    },
    "382": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 564],
      "op": "SWAP1",
      "path": "1"
    },
    "383": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 564],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "388": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 564],
      "op": "SWAP1",
      "path": "1"
    },
    "389": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196"
    },
    "392": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "SWAP1",
      "path": "1"
    },
    "393": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [565, 575],
      "op": "CALLER",
      "path": "1"
    },
    "394": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [565, 575],
      "op": "SWAP1",
      "path": "1"
    },
    "395": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [585, 589],
      "op": "ADDRESS",
      "path": "1"
    },
    "396": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [585, 589],
      "op": "SWAP1",
      "path": "1"
    },
    "397": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [592, 600],
      "op": "DUP11",
      "path": "1"
    },
    "398": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [592, 600],
      "op": "SWAP1",
      "path": "1"
    },
    "399": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "401": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "ADD",
      "path": "1"
    },
    "402": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH2",
      "path": "1",
      "value": "0x692"
    },
    "405": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [536, 601],
      "op": "JUMP",
      "path": "1"
    },
    "406": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "JUMPDEST",
      "path": "1"
    },
    "407": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "409": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "411": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "MLOAD",
      "path": "1"
    },
    "412": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP1",
      "path": "1"
    },
    "413": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP4",
      "path": "1"
    },
    "414": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "SUB",
      "path": "1"
    },
    "415": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP2",
      "path": "1"
    },
    "416": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "418": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP8",
      "path": "1"
    },
    "419": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "GAS",
      "path": "1"
    },
    "420": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "CALL",
      "path": "1"
    },
    "421": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "ISZERO",
      "path": "1"
    },
    "422": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP1",
      "path": "1"
    },
    "423": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "ISZERO",
      "path": "1"
    },
    "424": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B5"
    },
    "427": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "JUMPI",
      "path": "1"
    },
    "428": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "429": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "431": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP1",
      "path": "1"
    },
    "432": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "433": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "434": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "436": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "REVERT",
      "path": "1"
    },
    "437": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "JUMPDEST",
      "path": "1"
    },
    "438": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "POP",
      "path": "1"
    },
    "439": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "POP",
      "path": "1"
    },
    "440": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "POP",
      "path": "1"
    },
    "441": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "POP",
      "path": "1"
    },
    "442": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "444": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "MLOAD",
      "path": "1"
    },
    "445": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "446": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "448": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "NOT",
      "path": "1"
    },
    "449": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "451": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP3",
      "path": "1"
    },
    "452": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "ADD",
      "path": "1"
    },
    "453": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "AND",
      "path": "1"
    },
    "454": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP3",
      "path": "1"
    },
    "455": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "ADD",
      "path": "1"
    },
    "456": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP1",
      "path": "1"
    },
    "457": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "459": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "MSTORE",
      "path": "1"
    },
    "460": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "POP",
      "path": "1"
    },
    "461": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "DUP2",
      "path": "1"
    },
    "462": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "ADD",
      "path": "1"
    },
    "463": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "SWAP1",
      "path": "1"
    },
    "464": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "467": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "SWAP2",
      "path": "1"
    },
    "468": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "SWAP1",
      "path": "1"
    },
    "469": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "472": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [536, 601],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [536, 601],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x40"
    },
    "477": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "MLOAD",
      "path": "1"
    },
    "478": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "483": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "485": {
      "op": "SHL"
    },
    "486": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP2",
      "path": "1"
    },
    "487": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "MSTORE",
      "path": "1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "494": {
      "op": "SHL"
    },
    "495": {
      "op": "SUB"
    },
    "496": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 639],
      "op": "DUP4",
      "path": "1"
    },
    "497": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 639],
      "op": "AND",
      "path": "1"
    },
    "498": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 639],
      "op": "SWAP1",
      "path": "1"
    },
    "499": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 639],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "504": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 639],
      "op": "SWAP1",
      "path": "1"
    },
    "505": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20A"
    },
    "508": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "SWAP1",
      "path": "1"
    },
    "509": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [640, 650],
      "op": "CALLER",
      "path": "1"
    },
    "510": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [640, 650],
      "op": "SWAP1",
      "path": "1"
    },
    "511": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [660, 664],
      "op": "ADDRESS",
      "path": "1"
    },
    "512": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [660, 664],
      "op": "SWAP1",
      "path": "1"
    },
    "513": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [667, 675],
      "op": "DUP10",
      "path": "1"
    },
    "514": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [667, 675],
      "op": "SWAP1",
      "path": "1"
    },
    "515": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "517": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "ADD",
      "path": "1"
    },
    "518": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH2",
      "path": "1",
      "value": "0x692"
    },
    "521": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [611, 676],
      "op": "JUMP",
      "path": "1"
    },
    "522": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "JUMPDEST",
      "path": "1"
    },
    "523": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "525": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "527": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "MLOAD",
      "path": "1"
    },
    "528": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP1",
      "path": "1"
    },
    "529": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP4",
      "path": "1"
    },
    "530": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "SUB",
      "path": "1"
    },
    "531": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP2",
      "path": "1"
    },
    "532": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "534": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP8",
      "path": "1"
    },
    "535": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "GAS",
      "path": "1"
    },
    "536": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "CALL",
      "path": "1"
    },
    "537": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "ISZERO",
      "path": "1"
    },
    "538": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP1",
      "path": "1"
    },
    "539": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "ISZERO",
      "path": "1"
    },
    "540": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH2",
      "path": "1",
      "value": "0x229"
    },
    "543": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "JUMPI",
      "path": "1"
    },
    "544": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "545": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "547": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP1",
      "path": "1"
    },
    "548": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "549": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "550": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "552": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "REVERT",
      "path": "1"
    },
    "553": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "JUMPDEST",
      "path": "1"
    },
    "554": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "POP",
      "path": "1"
    },
    "555": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "POP",
      "path": "1"
    },
    "556": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "POP",
      "path": "1"
    },
    "557": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "POP",
      "path": "1"
    },
    "558": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "560": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "MLOAD",
      "path": "1"
    },
    "561": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "562": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "564": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "NOT",
      "path": "1"
    },
    "565": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "567": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP3",
      "path": "1"
    },
    "568": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "ADD",
      "path": "1"
    },
    "569": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "AND",
      "path": "1"
    },
    "570": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP3",
      "path": "1"
    },
    "571": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "ADD",
      "path": "1"
    },
    "572": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP1",
      "path": "1"
    },
    "573": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "575": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "MSTORE",
      "path": "1"
    },
    "576": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "POP",
      "path": "1"
    },
    "577": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "DUP2",
      "path": "1"
    },
    "578": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "ADD",
      "path": "1"
    },
    "579": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "SWAP1",
      "path": "1"
    },
    "580": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24D"
    },
    "583": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "SWAP2",
      "path": "1"
    },
    "584": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "SWAP1",
      "path": "1"
    },
    "585": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "588": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [611, 676],
      "op": "JUMP",
      "path": "1"
    },
    "589": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [611, 676],
      "op": "JUMPDEST",
      "path": "1"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [703, 722],
      "op": "PUSH2",
      "path": "1",
      "statement": 3,
      "value": "0x258"
    },
    "594": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [714, 722],
      "op": "DUP5",
      "path": "1"
    },
    "595": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [703, 711],
      "op": "DUP7",
      "path": "1"
    },
    "596": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [703, 722],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6DF"
    },
    "599": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [703, 722],
      "op": "JUMP",
      "path": "1"
    },
    "600": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [703, 722],
      "op": "JUMPDEST",
      "path": "1"
    },
    "601": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 740],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "603": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 740],
      "op": "SLOAD",
      "path": "1"
    },
    "604": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "606": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "MLOAD",
      "path": "1"
    },
    "607": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP2",
      "path": "1"
    },
    "616": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "MSTORE",
      "path": "1"
    },
    "617": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [750, 760],
      "op": "CALLER",
      "path": "1"
    },
    "618": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "620": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP3",
      "path": "1"
    },
    "621": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "ADD",
      "path": "1"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "625": {
      "op": "DUP2"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "DUP4"
    },
    "628": {
      "op": "SWAP1"
    },
    "629": {
      "op": "MSTORE"
    },
    "630": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [686, 722],
      "op": "SWAP2",
      "path": "1"
    },
    "631": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [686, 722],
      "op": "SWAP3",
      "path": "1"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "SUB"
    },
    "641": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 740],
      "op": "AND",
      "path": "1"
    },
    "642": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 740],
      "op": "SWAP1",
      "path": "1"
    },
    "643": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 749],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "648": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 749],
      "op": "SWAP1",
      "path": "1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "651": {
      "op": "ADD"
    },
    "652": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "654": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "656": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "MLOAD",
      "path": "1"
    },
    "657": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP1",
      "path": "1"
    },
    "658": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP4",
      "path": "1"
    },
    "659": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "SUB",
      "path": "1"
    },
    "660": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP2",
      "path": "1"
    },
    "661": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "663": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP8",
      "path": "1"
    },
    "664": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "GAS",
      "path": "1"
    },
    "665": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "CALL",
      "path": "1"
    },
    "666": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "ISZERO",
      "path": "1"
    },
    "667": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP1",
      "path": "1"
    },
    "668": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "ISZERO",
      "path": "1"
    },
    "669": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AA"
    },
    "672": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "JUMPI",
      "path": "1"
    },
    "673": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "674": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "676": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP1",
      "path": "1"
    },
    "677": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "678": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "679": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "681": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "REVERT",
      "path": "1"
    },
    "682": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "JUMPDEST",
      "path": "1"
    },
    "683": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "POP",
      "path": "1"
    },
    "684": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "POP",
      "path": "1"
    },
    "685": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "POP",
      "path": "1"
    },
    "686": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "POP",
      "path": "1"
    },
    "687": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "689": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "MLOAD",
      "path": "1"
    },
    "690": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "691": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "693": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "NOT",
      "path": "1"
    },
    "694": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "696": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP3",
      "path": "1"
    },
    "697": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "ADD",
      "path": "1"
    },
    "698": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "AND",
      "path": "1"
    },
    "699": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP3",
      "path": "1"
    },
    "700": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "ADD",
      "path": "1"
    },
    "701": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP1",
      "path": "1"
    },
    "702": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "704": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "MSTORE",
      "path": "1"
    },
    "705": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "POP",
      "path": "1"
    },
    "706": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "DUP2",
      "path": "1"
    },
    "707": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "ADD",
      "path": "1"
    },
    "708": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "SWAP1",
      "path": "1"
    },
    "709": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CE"
    },
    "712": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "SWAP2",
      "path": "1"
    },
    "713": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "SWAP1",
      "path": "1"
    },
    "714": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "717": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "i",
      "offset": [732, 777],
      "op": "JUMP",
      "path": "1"
    },
    "718": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "JUMPDEST",
      "path": "1"
    },
    "719": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [732, 777],
      "op": "POP",
      "path": "1"
    },
    "720": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [409, 784],
      "op": "POP",
      "path": "1"
    },
    "721": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "POP",
      "path": "1"
    },
    "722": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "POP",
      "path": "1"
    },
    "723": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "POP",
      "path": "1"
    },
    "724": {
      "fn": "TokenPool.provideLiquidity",
      "offset": [298, 784],
      "op": "POP",
      "path": "1"
    },
    "725": {
      "fn": "TokenPool.provideLiquidity",
      "jump": "o",
      "offset": [298, 784],
      "op": "JUMP",
      "path": "1"
    },
    "726": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "JUMPDEST",
      "path": "1"
    },
    "727": {
      "fn": "TokenPool.redeemShare",
      "offset": [1184, 1185],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x0"
    },
    "729": {
      "fn": "TokenPool.redeemShare",
      "offset": [1174, 1181],
      "op": "DUP4",
      "path": "1"
    },
    "730": {
      "branch": 13,
      "fn": "TokenPool.redeemShare",
      "offset": [1174, 1185],
      "op": "GT",
      "path": "1"
    },
    "731": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "PUSH2",
      "path": "1",
      "value": "0x326"
    },
    "734": {
      "branch": 13,
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "JUMPI",
      "path": "1"
    },
    "735": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "737": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "MLOAD",
      "path": "1"
    },
    "738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "DUP2",
      "path": "1"
    },
    "746": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "MSTORE",
      "path": "1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "749": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "751": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "DUP3",
      "path": "1"
    },
    "752": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "ADD",
      "path": "1"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E2030000000"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "796": {
      "op": "DUP3"
    },
    "797": {
      "op": "ADD"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "805": {
      "op": "JUMP"
    },
    "806": {
      "fn": "TokenPool.redeemShare",
      "offset": [1166, 1219],
      "op": "JUMPDEST",
      "path": "1"
    },
    "807": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1237],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "809": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1237],
      "op": "SLOAD",
      "path": "1"
    },
    "810": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "812": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "MLOAD",
      "path": "1"
    },
    "813": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP2",
      "path": "1"
    },
    "822": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "MSTORE",
      "path": "1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "SUB"
    },
    "831": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1237],
      "op": "SWAP1",
      "path": "1"
    },
    "832": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1237],
      "op": "SWAP2",
      "path": "1"
    },
    "833": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1237],
      "op": "AND",
      "path": "1"
    },
    "834": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1237],
      "op": "SWAP1",
      "path": "1"
    },
    "835": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1250],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "840": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1250],
      "op": "SWAP1",
      "path": "1"
    },
    "841": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35A"
    },
    "844": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "SWAP1",
      "path": "1"
    },
    "845": {
      "fn": "TokenPool.redeemShare",
      "offset": [1251, 1261],
      "op": "CALLER",
      "path": "1"
    },
    "846": {
      "fn": "TokenPool.redeemShare",
      "offset": [1251, 1261],
      "op": "SWAP1",
      "path": "1"
    },
    "847": {
      "fn": "TokenPool.redeemShare",
      "offset": [1271, 1275],
      "op": "ADDRESS",
      "path": "1"
    },
    "848": {
      "fn": "TokenPool.redeemShare",
      "offset": [1271, 1275],
      "op": "SWAP1",
      "path": "1"
    },
    "849": {
      "fn": "TokenPool.redeemShare",
      "offset": [1278, 1285],
      "op": "DUP9",
      "path": "1"
    },
    "850": {
      "fn": "TokenPool.redeemShare",
      "offset": [1278, 1285],
      "op": "SWAP1",
      "path": "1"
    },
    "851": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "853": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "ADD",
      "path": "1"
    },
    "854": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH2",
      "path": "1",
      "value": "0x692"
    },
    "857": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1229, 1286],
      "op": "JUMP",
      "path": "1"
    },
    "858": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "JUMPDEST",
      "path": "1"
    },
    "859": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "861": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "863": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "MLOAD",
      "path": "1"
    },
    "864": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP1",
      "path": "1"
    },
    "865": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP4",
      "path": "1"
    },
    "866": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "SUB",
      "path": "1"
    },
    "867": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP2",
      "path": "1"
    },
    "868": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "870": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP8",
      "path": "1"
    },
    "871": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "GAS",
      "path": "1"
    },
    "872": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "CALL",
      "path": "1"
    },
    "873": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "ISZERO",
      "path": "1"
    },
    "874": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP1",
      "path": "1"
    },
    "875": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "ISZERO",
      "path": "1"
    },
    "876": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH2",
      "path": "1",
      "value": "0x379"
    },
    "879": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "JUMPI",
      "path": "1"
    },
    "880": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "881": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "883": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP1",
      "path": "1"
    },
    "884": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "885": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "886": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "888": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "REVERT",
      "path": "1"
    },
    "889": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "JUMPDEST",
      "path": "1"
    },
    "890": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "POP",
      "path": "1"
    },
    "891": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "POP",
      "path": "1"
    },
    "892": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "POP",
      "path": "1"
    },
    "893": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "POP",
      "path": "1"
    },
    "894": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "896": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "MLOAD",
      "path": "1"
    },
    "897": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "898": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "900": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "NOT",
      "path": "1"
    },
    "901": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "903": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP3",
      "path": "1"
    },
    "904": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "ADD",
      "path": "1"
    },
    "905": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "AND",
      "path": "1"
    },
    "906": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP3",
      "path": "1"
    },
    "907": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "ADD",
      "path": "1"
    },
    "908": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP1",
      "path": "1"
    },
    "909": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "911": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "MSTORE",
      "path": "1"
    },
    "912": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "POP",
      "path": "1"
    },
    "913": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "DUP2",
      "path": "1"
    },
    "914": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "ADD",
      "path": "1"
    },
    "915": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "SWAP1",
      "path": "1"
    },
    "916": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39D"
    },
    "919": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "SWAP2",
      "path": "1"
    },
    "920": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "SWAP1",
      "path": "1"
    },
    "921": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "924": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1229, 1286],
      "op": "JUMP",
      "path": "1"
    },
    "925": {
      "fn": "TokenPool.redeemShare",
      "offset": [1229, 1286],
      "op": "JUMPDEST",
      "path": "1"
    },
    "926": {
      "op": "POP"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "933": {
      "op": "SHL"
    },
    "934": {
      "op": "SUB"
    },
    "935": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1317],
      "op": "DUP3",
      "path": "1",
      "statement": 7
    },
    "936": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1317],
      "op": "AND",
      "path": "1"
    },
    "937": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1317],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "942": {
      "fn": "TokenPool.redeemShare",
      "offset": [1318, 1328],
      "op": "CALLER",
      "path": "1"
    },
    "943": {
      "fn": "TokenPool.redeemShare",
      "offset": [1330, 1339],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B9"
    },
    "946": {
      "fn": "TokenPool.redeemShare",
      "offset": [1338, 1339],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "948": {
      "fn": "TokenPool.redeemShare",
      "offset": [1330, 1337],
      "op": "DUP8",
      "path": "1"
    },
    "949": {
      "fn": "TokenPool.redeemShare",
      "offset": [1330, 1339],
      "op": "PUSH2",
      "path": "1",
      "value": "0x705"
    },
    "952": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1330, 1339],
      "op": "JUMP",
      "path": "1"
    },
    "953": {
      "fn": "TokenPool.redeemShare",
      "offset": [1330, 1339],
      "op": "JUMPDEST",
      "path": "1"
    },
    "954": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "956": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "MLOAD",
      "path": "1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "op": "NOT"
    },
    "966": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "968": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP6",
      "path": "1"
    },
    "969": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "SWAP1",
      "path": "1"
    },
    "970": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "SHL",
      "path": "1"
    },
    "971": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "AND",
      "path": "1"
    },
    "972": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP2",
      "path": "1"
    },
    "973": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "MSTORE",
      "path": "1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "980": {
      "op": "SHL"
    },
    "981": {
      "op": "SUB"
    },
    "982": {
      "op": "SWAP1"
    },
    "983": {
      "op": "SWAP3"
    },
    "984": {
      "op": "AND"
    },
    "985": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "987": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP4",
      "path": "1"
    },
    "988": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "ADD",
      "path": "1"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1000": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1002": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "MLOAD",
      "path": "1"
    },
    "1003": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP1",
      "path": "1"
    },
    "1004": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP4",
      "path": "1"
    },
    "1005": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "SUB",
      "path": "1"
    },
    "1006": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP2",
      "path": "1"
    },
    "1007": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1009": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP8",
      "path": "1"
    },
    "1010": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "GAS",
      "path": "1"
    },
    "1011": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "CALL",
      "path": "1"
    },
    "1012": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "ISZERO",
      "path": "1"
    },
    "1013": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP1",
      "path": "1"
    },
    "1014": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "ISZERO",
      "path": "1"
    },
    "1015": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH2",
      "path": "1",
      "value": "0x404"
    },
    "1018": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "JUMPI",
      "path": "1"
    },
    "1019": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1020": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1022": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP1",
      "path": "1"
    },
    "1023": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1024": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1025": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1027": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "REVERT",
      "path": "1"
    },
    "1028": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1029": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "POP",
      "path": "1"
    },
    "1030": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "POP",
      "path": "1"
    },
    "1031": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "POP",
      "path": "1"
    },
    "1032": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "POP",
      "path": "1"
    },
    "1033": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1035": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "MLOAD",
      "path": "1"
    },
    "1036": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1037": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1039": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "NOT",
      "path": "1"
    },
    "1040": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1042": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP3",
      "path": "1"
    },
    "1043": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "ADD",
      "path": "1"
    },
    "1044": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "AND",
      "path": "1"
    },
    "1045": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP3",
      "path": "1"
    },
    "1046": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "ADD",
      "path": "1"
    },
    "1047": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP1",
      "path": "1"
    },
    "1048": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1050": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "MSTORE",
      "path": "1"
    },
    "1051": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "POP",
      "path": "1"
    },
    "1052": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "DUP2",
      "path": "1"
    },
    "1053": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "ADD",
      "path": "1"
    },
    "1054": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "SWAP1",
      "path": "1"
    },
    "1055": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH2",
      "path": "1",
      "value": "0x428"
    },
    "1058": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "SWAP2",
      "path": "1"
    },
    "1059": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "SWAP1",
      "path": "1"
    },
    "1060": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "1063": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1296, 1340],
      "op": "JUMP",
      "path": "1"
    },
    "1064": {
      "fn": "TokenPool.redeemShare",
      "offset": [1296, 1340],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1065": {
      "op": "POP"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1072": {
      "op": "SHL"
    },
    "1073": {
      "op": "SUB"
    },
    "1074": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1371],
      "op": "DUP2",
      "path": "1",
      "statement": 8
    },
    "1075": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1371],
      "op": "AND",
      "path": "1"
    },
    "1076": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1371],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "1081": {
      "fn": "TokenPool.redeemShare",
      "offset": [1372, 1382],
      "op": "CALLER",
      "path": "1"
    },
    "1082": {
      "fn": "TokenPool.redeemShare",
      "offset": [1384, 1393],
      "op": "PUSH2",
      "path": "1",
      "value": "0x444"
    },
    "1085": {
      "fn": "TokenPool.redeemShare",
      "offset": [1392, 1393],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1087": {
      "fn": "TokenPool.redeemShare",
      "offset": [1384, 1391],
      "op": "DUP8",
      "path": "1"
    },
    "1088": {
      "fn": "TokenPool.redeemShare",
      "offset": [1384, 1393],
      "op": "PUSH2",
      "path": "1",
      "value": "0x705"
    },
    "1091": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1384, 1393],
      "op": "JUMP",
      "path": "1"
    },
    "1092": {
      "fn": "TokenPool.redeemShare",
      "offset": [1384, 1393],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1093": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1095": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "MLOAD",
      "path": "1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "SUB"
    },
    "1104": {
      "op": "NOT"
    },
    "1105": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1107": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP6",
      "path": "1"
    },
    "1108": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "SWAP1",
      "path": "1"
    },
    "1109": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "SHL",
      "path": "1"
    },
    "1110": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "AND",
      "path": "1"
    },
    "1111": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP2",
      "path": "1"
    },
    "1112": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "MSTORE",
      "path": "1"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1119": {
      "op": "SHL"
    },
    "1120": {
      "op": "SUB"
    },
    "1121": {
      "op": "SWAP1"
    },
    "1122": {
      "op": "SWAP3"
    },
    "1123": {
      "op": "AND"
    },
    "1124": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1126": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP4",
      "path": "1"
    },
    "1127": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "ADD",
      "path": "1"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1131": {
      "op": "DUP3"
    },
    "1132": {
      "op": "ADD"
    },
    "1133": {
      "op": "MSTORE"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1138": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1140": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1142": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "MLOAD",
      "path": "1"
    },
    "1143": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP1",
      "path": "1"
    },
    "1144": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP4",
      "path": "1"
    },
    "1145": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "SUB",
      "path": "1"
    },
    "1146": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP2",
      "path": "1"
    },
    "1147": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1149": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP8",
      "path": "1"
    },
    "1150": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "GAS",
      "path": "1"
    },
    "1151": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "CALL",
      "path": "1"
    },
    "1152": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "ISZERO",
      "path": "1"
    },
    "1153": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP1",
      "path": "1"
    },
    "1154": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "ISZERO",
      "path": "1"
    },
    "1155": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH2",
      "path": "1",
      "value": "0x490"
    },
    "1158": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "JUMPI",
      "path": "1"
    },
    "1159": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1160": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1162": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP1",
      "path": "1"
    },
    "1163": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1164": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1165": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1167": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "REVERT",
      "path": "1"
    },
    "1168": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1169": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "POP",
      "path": "1"
    },
    "1170": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "POP",
      "path": "1"
    },
    "1171": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "POP",
      "path": "1"
    },
    "1172": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "POP",
      "path": "1"
    },
    "1173": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1175": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "MLOAD",
      "path": "1"
    },
    "1176": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1177": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1179": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "NOT",
      "path": "1"
    },
    "1180": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1182": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP3",
      "path": "1"
    },
    "1183": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "ADD",
      "path": "1"
    },
    "1184": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "AND",
      "path": "1"
    },
    "1185": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP3",
      "path": "1"
    },
    "1186": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "ADD",
      "path": "1"
    },
    "1187": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP1",
      "path": "1"
    },
    "1188": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1190": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "MSTORE",
      "path": "1"
    },
    "1191": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "POP",
      "path": "1"
    },
    "1192": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "DUP2",
      "path": "1"
    },
    "1193": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "ADD",
      "path": "1"
    },
    "1194": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "SWAP1",
      "path": "1"
    },
    "1195": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B4"
    },
    "1198": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "SWAP2",
      "path": "1"
    },
    "1199": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "SWAP1",
      "path": "1"
    },
    "1200": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "1203": {
      "fn": "TokenPool.redeemShare",
      "jump": "i",
      "offset": [1350, 1394],
      "op": "JUMP",
      "path": "1"
    },
    "1204": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1205": {
      "fn": "TokenPool.redeemShare",
      "offset": [1350, 1394],
      "op": "POP",
      "path": "1"
    },
    "1206": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "POP",
      "path": "1"
    },
    "1207": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "POP",
      "path": "1"
    },
    "1208": {
      "fn": "TokenPool.redeemShare",
      "offset": [1083, 1401],
      "op": "POP",
      "path": "1"
    },
    "1209": {
      "fn": "TokenPool.redeemShare",
      "jump": "o",
      "offset": [1083, 1401],
      "op": "JUMP",
      "path": "1"
    },
    "1210": {
      "offset": [169, 195],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1211": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1213": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP2",
      "path": "1"
    },
    "1214": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP2",
      "path": "1"
    },
    "1215": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "SLOAD",
      "path": "1"
    },
    "1216": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP2",
      "path": "1"
    },
    "1217": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "LT",
      "path": "1"
    },
    "1218": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CA"
    },
    "1221": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "JUMPI",
      "path": "1"
    },
    "1222": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1224": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP1",
      "path": "1"
    },
    "1225": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "REVERT",
      "path": "1"
    },
    "1226": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1227": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1229": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "SWAP2",
      "path": "1"
    },
    "1230": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "DUP3",
      "path": "1"
    },
    "1231": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "MSTORE",
      "path": "1"
    },
    "1232": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1234": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "SWAP1",
      "path": "1"
    },
    "1235": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "SWAP2",
      "path": "1"
    },
    "1236": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "KECCAK256",
      "path": "1"
    },
    "1237": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "ADD",
      "path": "1"
    },
    "1238": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "SLOAD",
      "path": "1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "offset": [169, 195],
      "op": "AND",
      "path": "1"
    },
    "1248": {
      "fn": "TokenPool.redeemShare",
      "offset": [169, 195],
      "op": "SWAP1",
      "path": "1"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "offset": [169, 195],
      "op": "DUP2",
      "path": "1"
    },
    "1251": {
      "fn": "TokenPool.redeemShare",
      "jump": "o",
      "offset": [169, 195],
      "op": "JUMP",
      "path": "1"
    },
    "1252": {
      "fn": "TokenPool.swapTokens",
      "offset": [791, 1077],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1253": {
      "fn": "TokenPool.swapTokens",
      "offset": [897, 898],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x0"
    },
    "1255": {
      "fn": "TokenPool.swapTokens",
      "offset": [887, 894],
      "op": "DUP4",
      "path": "1"
    },
    "1256": {
      "branch": 14,
      "fn": "TokenPool.swapTokens",
      "offset": [887, 898],
      "op": "GT",
      "path": "1"
    },
    "1257": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "PUSH2",
      "path": "1",
      "value": "0x534"
    },
    "1260": {
      "branch": 14,
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "JUMPI",
      "path": "1"
    },
    "1261": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1263": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "MLOAD",
      "path": "1"
    },
    "1264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "DUP2",
      "path": "1"
    },
    "1272": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "MSTORE",
      "path": "1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1275": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1277": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "DUP3",
      "path": "1"
    },
    "1278": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "ADD",
      "path": "1"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1284": {
      "op": "DUP3"
    },
    "1285": {
      "op": "ADD"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D7573742062652067726561746572207468616E2030000000"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1322": {
      "op": "DUP3"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15A"
    },
    "1331": {
      "op": "JUMP"
    },
    "1332": {
      "fn": "TokenPool.swapTokens",
      "offset": [879, 932],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1333": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x40"
    },
    "1335": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "MLOAD",
      "path": "1"
    },
    "1336": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP2",
      "path": "1"
    },
    "1345": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "MSTORE",
      "path": "1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 970],
      "op": "DUP4",
      "path": "1"
    },
    "1355": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 970],
      "op": "AND",
      "path": "1"
    },
    "1356": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 970],
      "op": "SWAP1",
      "path": "1"
    },
    "1357": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 970],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "1362": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 970],
      "op": "SWAP1",
      "path": "1"
    },
    "1363": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH2",
      "path": "1",
      "value": "0x564"
    },
    "1366": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "SWAP1",
      "path": "1"
    },
    "1367": {
      "fn": "TokenPool.swapTokens",
      "offset": [971, 981],
      "op": "CALLER",
      "path": "1"
    },
    "1368": {
      "fn": "TokenPool.swapTokens",
      "offset": [971, 981],
      "op": "SWAP1",
      "path": "1"
    },
    "1369": {
      "fn": "TokenPool.swapTokens",
      "offset": [991, 995],
      "op": "ADDRESS",
      "path": "1"
    },
    "1370": {
      "fn": "TokenPool.swapTokens",
      "offset": [991, 995],
      "op": "SWAP1",
      "path": "1"
    },
    "1371": {
      "fn": "TokenPool.swapTokens",
      "offset": [998, 1005],
      "op": "DUP9",
      "path": "1"
    },
    "1372": {
      "fn": "TokenPool.swapTokens",
      "offset": [998, 1005],
      "op": "SWAP1",
      "path": "1"
    },
    "1373": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1375": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "ADD",
      "path": "1"
    },
    "1376": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH2",
      "path": "1",
      "value": "0x692"
    },
    "1379": {
      "fn": "TokenPool.swapTokens",
      "jump": "i",
      "offset": [942, 1006],
      "op": "JUMP",
      "path": "1"
    },
    "1380": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1381": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1383": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1385": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "MLOAD",
      "path": "1"
    },
    "1386": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP1",
      "path": "1"
    },
    "1387": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP4",
      "path": "1"
    },
    "1388": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "SUB",
      "path": "1"
    },
    "1389": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP2",
      "path": "1"
    },
    "1390": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1392": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP8",
      "path": "1"
    },
    "1393": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "GAS",
      "path": "1"
    },
    "1394": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "CALL",
      "path": "1"
    },
    "1395": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "ISZERO",
      "path": "1"
    },
    "1396": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP1",
      "path": "1"
    },
    "1397": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "ISZERO",
      "path": "1"
    },
    "1398": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH2",
      "path": "1",
      "value": "0x583"
    },
    "1401": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "JUMPI",
      "path": "1"
    },
    "1402": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1403": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1405": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP1",
      "path": "1"
    },
    "1406": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1407": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1408": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1410": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "REVERT",
      "path": "1"
    },
    "1411": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1412": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "POP",
      "path": "1"
    },
    "1413": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "POP",
      "path": "1"
    },
    "1414": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "POP",
      "path": "1"
    },
    "1415": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "POP",
      "path": "1"
    },
    "1416": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1418": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "MLOAD",
      "path": "1"
    },
    "1419": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1420": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1422": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "NOT",
      "path": "1"
    },
    "1423": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1425": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP3",
      "path": "1"
    },
    "1426": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "ADD",
      "path": "1"
    },
    "1427": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "AND",
      "path": "1"
    },
    "1428": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP3",
      "path": "1"
    },
    "1429": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "ADD",
      "path": "1"
    },
    "1430": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP1",
      "path": "1"
    },
    "1431": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1433": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "MSTORE",
      "path": "1"
    },
    "1434": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "POP",
      "path": "1"
    },
    "1435": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "DUP2",
      "path": "1"
    },
    "1436": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "ADD",
      "path": "1"
    },
    "1437": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "SWAP1",
      "path": "1"
    },
    "1438": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A7"
    },
    "1441": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "SWAP2",
      "path": "1"
    },
    "1442": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "SWAP1",
      "path": "1"
    },
    "1443": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B6"
    },
    "1446": {
      "fn": "TokenPool.swapTokens",
      "jump": "i",
      "offset": [942, 1006],
      "op": "JUMP",
      "path": "1"
    },
    "1447": {
      "fn": "TokenPool.swapTokens",
      "offset": [942, 1006],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1448": {
      "op": "POP"
    },
    "1449": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x40"
    },
    "1451": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "MLOAD",
      "path": "1"
    },
    "1452": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "MSTORE",
      "path": "1"
    },
    "1462": {
      "fn": "TokenPool.swapTokens",
      "offset": [1041, 1051],
      "op": "CALLER",
      "path": "1"
    },
    "1463": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1465": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "DUP3",
      "path": "1"
    },
    "1466": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "ADD",
      "path": "1"
    },
    "1467": {
      "op": "MSTORE"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1470": {
      "op": "DUP2"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "DUP5"
    },
    "1473": {
      "op": "SWAP1"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1040],
      "op": "DUP3",
      "path": "1"
    },
    "1484": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1040],
      "op": "AND",
      "path": "1"
    },
    "1485": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1040],
      "op": "SWAP1",
      "path": "1"
    },
    "1486": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1040],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "1491": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1040],
      "op": "SWAP1",
      "path": "1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1494": {
      "op": "ADD"
    },
    "1495": {
      "fn": "TokenPool.swapTokens",
      "offset": [1016, 1061],
      "op": "PUSH2",
      "path": "1",
      "value": "0x471"
    },
    "1498": {
      "op": "JUMP"
    },
    "1499": {
      "op": "JUMPDEST"
    },
    "1500": {
      "op": "DUP1"
    },
    "1501": {
      "op": "CALLDATALOAD"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "op": "DUP2"
    },
    "1511": {
      "op": "AND"
    },
    "1512": {
      "op": "DUP2"
    },
    "1513": {
      "op": "EQ"
    },
    "1514": {
      "op": "PUSH2",
      "value": "0x5F2"
    },
    "1517": {
      "op": "JUMPI"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1520": {
      "op": "DUP1"
    },
    "1521": {
      "op": "REVERT"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "op": "SWAP2"
    },
    "1524": {
      "op": "SWAP1"
    },
    "1525": {
      "op": "POP"
    },
    "1526": {
      "jump": "o",
      "op": "JUMP"
    },
    "1527": {
      "op": "JUMPDEST"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1530": {
      "op": "DUP1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1533": {
      "op": "DUP1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1536": {
      "op": "DUP6"
    },
    "1537": {
      "op": "DUP8"
    },
    "1538": {
      "op": "SUB"
    },
    "1539": {
      "op": "SLT"
    },
    "1540": {
      "op": "ISZERO"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0x60D"
    },
    "1544": {
      "op": "JUMPI"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1547": {
      "op": "DUP1"
    },
    "1548": {
      "op": "REVERT"
    },
    "1549": {
      "op": "JUMPDEST"
    },
    "1550": {
      "op": "DUP5"
    },
    "1551": {
      "op": "CALLDATALOAD"
    },
    "1552": {
      "op": "SWAP4"
    },
    "1553": {
      "op": "POP"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1556": {
      "op": "DUP6"
    },
    "1557": {
      "op": "ADD"
    },
    "1558": {
      "op": "CALLDATALOAD"
    },
    "1559": {
      "op": "SWAP3"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x624"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1566": {
      "op": "DUP7"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "1571": {
      "jump": "i",
      "op": "JUMP"
    },
    "1572": {
      "op": "JUMPDEST"
    },
    "1573": {
      "op": "SWAP2"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x632"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1580": {
      "op": "DUP7"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "1585": {
      "jump": "i",
      "op": "JUMP"
    },
    "1586": {
      "op": "JUMPDEST"
    },
    "1587": {
      "op": "SWAP1"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "SWAP3"
    },
    "1590": {
      "op": "SWAP6"
    },
    "1591": {
      "op": "SWAP2"
    },
    "1592": {
      "op": "SWAP5"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "SWAP3"
    },
    "1595": {
      "op": "POP"
    },
    "1596": {
      "jump": "o",
      "op": "JUMP"
    },
    "1597": {
      "op": "JUMPDEST"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "DUP1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1605": {
      "op": "DUP5"
    },
    "1606": {
      "op": "DUP7"
    },
    "1607": {
      "op": "SUB"
    },
    "1608": {
      "op": "SLT"
    },
    "1609": {
      "op": "ISZERO"
    },
    "1610": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1613": {
      "op": "JUMPI"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1616": {
      "op": "DUP1"
    },
    "1617": {
      "op": "REVERT"
    },
    "1618": {
      "op": "JUMPDEST"
    },
    "1619": {
      "op": "DUP4"
    },
    "1620": {
      "op": "CALLDATALOAD"
    },
    "1621": {
      "op": "SWAP3"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1628": {
      "op": "DUP6"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "1633": {
      "jump": "i",
      "op": "JUMP"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "SWAP2"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "op": "PUSH2",
      "value": "0x670"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1642": {
      "op": "DUP6"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "op": "PUSH2",
      "value": "0x5DB"
    },
    "1647": {
      "jump": "i",
      "op": "JUMP"
    },
    "1648": {
      "op": "JUMPDEST"
    },
    "1649": {
      "op": "SWAP1"
    },
    "1650": {
      "op": "POP"
    },
    "1651": {
      "op": "SWAP3"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "SWAP3"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "op": "SWAP3"
    },
    "1656": {
      "jump": "o",
      "op": "JUMP"
    },
    "1657": {
      "op": "JUMPDEST"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1662": {
      "op": "DUP3"
    },
    "1663": {
      "op": "DUP5"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "op": "SLT"
    },
    "1666": {
      "op": "ISZERO"
    },
    "1667": {
      "op": "PUSH2",
      "value": "0x68B"
    },
    "1670": {
      "op": "JUMPI"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1673": {
      "op": "DUP1"
    },
    "1674": {
      "op": "REVERT"
    },
    "1675": {
      "op": "JUMPDEST"
    },
    "1676": {
      "op": "POP"
    },
    "1677": {
      "op": "CALLDATALOAD"
    },
    "1678": {
      "op": "SWAP2"
    },
    "1679": {
      "op": "SWAP1"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "jump": "o",
      "op": "JUMP"
    },
    "1682": {
      "op": "JUMPDEST"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "op": "SUB"
    },
    "1691": {
      "op": "SWAP4"
    },
    "1692": {
      "op": "DUP5"
    },
    "1693": {
      "op": "AND"
    },
    "1694": {
      "op": "DUP2"
    },
    "1695": {
      "op": "MSTORE"
    },
    "1696": {
      "op": "SWAP2"
    },
    "1697": {
      "op": "SWAP1"
    },
    "1698": {
      "op": "SWAP3"
    },
    "1699": {
      "op": "AND"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1702": {
      "op": "DUP3"
    },
    "1703": {
      "op": "ADD"
    },
    "1704": {
      "op": "MSTORE"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1707": {
      "op": "DUP2"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "SWAP2"
    },
    "1710": {
      "op": "SWAP1"
    },
    "1711": {
      "op": "SWAP2"
    },
    "1712": {
      "op": "MSTORE"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1715": {
      "op": "ADD"
    },
    "1716": {
      "op": "SWAP1"
    },
    "1717": {
      "jump": "o",
      "op": "JUMP"
    },
    "1718": {
      "op": "JUMPDEST"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1723": {
      "op": "DUP3"
    },
    "1724": {
      "op": "DUP5"
    },
    "1725": {
      "op": "SUB"
    },
    "1726": {
      "op": "SLT"
    },
    "1727": {
      "op": "ISZERO"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x6C8"
    },
    "1731": {
      "op": "JUMPI"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1734": {
      "op": "DUP1"
    },
    "1735": {
      "op": "REVERT"
    },
    "1736": {
      "op": "JUMPDEST"
    },
    "1737": {
      "op": "DUP2"
    },
    "1738": {
      "op": "MLOAD"
    },
    "1739": {
      "op": "DUP1"
    },
    "1740": {
      "op": "ISZERO"
    },
    "1741": {
      "op": "ISZERO"
    },
    "1742": {
      "op": "DUP2"
    },
    "1743": {
      "op": "EQ"
    },
    "1744": {
      "op": "PUSH2",
      "value": "0x6D8"
    },
    "1747": {
      "op": "JUMPI"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1750": {
      "op": "DUP1"
    },
    "1751": {
      "op": "REVERT"
    },
    "1752": {
      "op": "JUMPDEST"
    },
    "1753": {
      "op": "SWAP4"
    },
    "1754": {
      "op": "SWAP3"
    },
    "1755": {
      "op": "POP"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "jump": "o",
      "op": "JUMP"
    },
    "1759": {
      "op": "JUMPDEST"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1762": {
      "op": "DUP3"
    },
    "1763": {
      "op": "NOT"
    },
    "1764": {
      "op": "DUP3"
    },
    "1765": {
      "op": "GT"
    },
    "1766": {
      "op": "ISZERO"
    },
    "1767": {
      "op": "PUSH2",
      "value": "0x700"
    },
    "1770": {
      "op": "JUMPI"
    },
    "1771": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1781": {
      "op": "MSTORE"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1786": {
      "op": "MSTORE"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1791": {
      "op": "REVERT"
    },
    "1792": {
      "op": "JUMPDEST"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "ADD"
    },
    "1795": {
      "op": "SWAP1"
    },
    "1796": {
      "jump": "o",
      "op": "JUMP"
    },
    "1797": {
      "op": "JUMPDEST"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1800": {
      "op": "DUP3"
    },
    "1801": {
      "op": "PUSH2",
      "value": "0x722"
    },
    "1804": {
      "op": "JUMPI"
    },
    "1805": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1812": {
      "op": "SHL"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1825": {
      "op": "REVERT"
    },
    "1826": {
      "op": "JUMPDEST"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "op": "DIV"
    },
    "1829": {
      "op": "SWAP1"
    },
    "1830": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d629b5e6b27170d2964dccc8f27b9a59fc3fd9c2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\ncontract TokenPool {\n    IERC20 public dexToken;\n    address[] public providers;\n\n    constructor(address _dexTokenAddress) {\n        dexToken = IERC20(_dexTokenAddress);\n    }\n\n    function provideLiquidity(uint256 _amount1, uint256 _amount2, address _token1, address _token2) public payable {\n        require(_amount1 == _amount2, \"tokens provided must be of equal value\");\n        uint256 totalValueSent = 0;\n        IERC20(_token1).transferFrom(msg.sender, address(this), _amount1);\n        IERC20(_token2).transferFrom(msg.sender, address(this), _amount2);\n        totalValueSent = _amount1 + _amount2;\n        dexToken.transfer(msg.sender, totalValueSent);\n    }\n\n\n    function swapTokens(uint256 _amount, address _token1, address _token2) public {\n        require(_amount > 0, \"Amount must be greater than 0\");\n        IERC20(_token1).transferFrom(msg.sender, address(this), _amount);\n        IERC20(_token2).transfer(msg.sender, _amount);\n        \n    }\n\n    function redeemShare(uint256 _amount, address _dai, address _gst) public {\n        require(_amount > 0, \"Amount must be greater than 0\");\n        dexToken.transferFrom(msg.sender, address(this), _amount);\n        IERC20(_dai).transfer(msg.sender, _amount/2);\n        IERC20(_gst).transfer(msg.sender, _amount/2);\n    }\n}",
  "sourceMap": "116:1287:1:-:0;;;202:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;250:8;:35;;-1:-1:-1;;;;;;250:35:1;-1:-1:-1;;;;;250:35:1;;;;;;;;;;116:1287;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;116:1287:1;;;;;;",
  "sourcePath": "contracts/Pool.sol",
  "type": "contract"
}
